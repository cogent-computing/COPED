services:

  ##########################
  ##  ALWAYS-ON SERVICES  ##
  ##########################
  web:
    build: ./web
    container_name: coped_web
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:${DJANGO_STATIC_ROOT:?}
      - dashboards:${VOILA_NOTEBOOK_DIR:?}
    expose:
      - 8000
    environment:
      DEBUG: 0
      SECRET_KEY: ${DJANGO_SECRET_KEY:?}
      STATIC_ROOT: ${DJANGO_STATIC_ROOT:?}
      DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]"
      SQL_ENGINE: django.db.backends.postgresql
      SQL_DATABASE: ${POSTGRES_DB:?}
      SQL_USER: ${POSTGRES_USER:?}
      SQL_PASSWORD: ${POSTGRES_PASSWORD:?}
      SQL_HOST: db
      SQL_PORT: ${POSTGRES_PORT:-5432}
      ELASTIC_HOSTNAME: elasticsearch
      ELASTIC_PORT: ${ELASTIC_PORT:-9200}
      COUCHDB_UKRI_DB: ${COUCHDB_UKRI_DB:?}

    depends_on:
      db:
        condition: service_healthy
      couch:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy


  nginx:
    build: ./nginx
    container_name: coped_nginx
    configs:
      - source: NGINX_CONFIG
        target: /etc/nginx/templates/default.conf.template
    volumes:
      - static_volume:${NGINX_STATIC_LOCATION:?}
    ports:
      - "1337:80"
    environment:
      DASHBOARDS_ROOT: ${NGINX_DASHBOARDS_ROOT:?}
      STATIC_LOCATION: ${NGINX_STATIC_LOCATION:?}
    depends_on:
      - web
      - voila

  db:
    build: ./postgres
    container_name: coped_postgres
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_DB: ${POSTGRES_DB:?}

  couch:
    build: ./couchdb
    container_name: coped_couch
    volumes:
      - couchdb_data:/opt/couchdb/data
    healthcheck:
      test: curl -s localhost:5984 > /dev/null || exit 1 
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - 5984
    environment:
      COUCHDB_USER: ${COUCHDB_USER:?}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD:?}

  voila:
    build: ./voila
    container_name: coped_voila
    volumes:
      - type: bind
        source: ./dashboards
        target: ${VOILA_NOTEBOOK_DIR:?}
        read_only: true
    environment:
      DASHBOARDS_ROOT: ${NGINX_DASHBOARDS_ROOT:?}
      NOTEBOOK_DIR: ${VOILA_NOTEBOOK_DIR:?}
    expose:
      - 8866

  elasticsearch:
    build: ./elasticsearch
    container_name: coped_elastic
    configs:
      - source: ELASTIC_CONFIG
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD:?}
    expose:
      - 9200
      - 9300
    healthcheck:
      test: curl -s localhost:9200 > /dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 5

  logstash:
    build: ./logstash
    container_name: coped_logstash
    configs:
      - source: LOGSTASH_CONFIG
        target: /usr/share/logstash/config/logstash.yml
      - source: LOGSTASH_PIPELINE
        target: /usr/share/logstash/pipeline
    environment:
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD:?}
    expose:
      - 5000/tcp
      - 5000/udp
      - 5044
      - 9600
    depends_on:
      - elasticsearch

  kibana:
    build: ./kibana
    container_name: coped_kibana
    configs:
      - source: KIBANA_CONFIG
        target: /usr/share/kibana/config/kibana.yml
    environment:
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD:?}
    expose:
      - 5601
    depends_on:
      - elasticseach



  ############################
  ##  TASK RUNNER SERVICES  ##
  ############################

  ukri_crawler:
    profiles:
      - task-runner
    build: ./tasks/ukri_crawler
    container_name: coped_ukri_crawler
    environment:
      DEBUG: 0
      # defaults
      COUCHDB_HOST: ${COUCHDB_HOST:-couch}
      COUCHDB_PORT: ${COUCHDB_PORT:-5984}
      # mandatory
      COUCHDB_USER: ${COUCHDB_USER:?}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD:?}
      COUCHDB_DB: ${COUCHDB_UKRI_DB:?}
    depends_on:
      - couch

  ukri_resources:
    profiles:
      - task-runner    
    build: ./tasks/ukri_resources
    container_name: coped_ukri_resources
    environment:
      DEBUG: 0
      # defaults
      COUCHDB_HOST: ${COUCHDB_HOST:-couch}
      COUCHDB_PORT: ${COUCHDB_PORT:-5984}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_RESOURCE_TABLE: ${POSTGRES_RESOURCE_TABLE:-coped_resource}
      POSTGRES_TYPE_TABLE: ${POSTGRES_TYPE_TABLE:-coped_resource_type}
      
      # mandatory
      COUCHDB_USER: ${COUCHDB_USER:?}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD:?}
      COUCHDB_DB: ${COUCHDB_UKRI_DB:?}
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_DB: ${POSTGRES_DB:?}
    depends_on:
      - couch
      - db


volumes:
  postgres_data:
  static_volume:
  couchdb_data:
  dashboards:
  elasticsearch:


configs:
  NGINX_CONFIG:
    file: ./nginx/config/default.conf.template
  ELASTIC_CONFIG:
    file: ./elasticsearch/config/elasticsearch.yml
  LOGSTASH_CONFIG:
    file: ./logstash/config/logstash.yml
  LOGSTASH_PIPELINE:
    file: ./logstash/pipeline
  KIBANA_CONFIG:
    file: ./kibana/config/kibana.yml
