services:

  web:
    build: ./web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./web:/usr/src/app
      - ./dashboards_test:/usr/share/voila/notebooks
    ports:
      - "8000:8000"
    env_file:
      - ./envs/dev/web
    depends_on:
      - db
      - couch
      - elasticsearch

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    environment:
      - POSTGRES_USER_FILE=/run/secrets/POSTGRES_USER
      - POSTGRES_PASSWORD_FILE=/run/secrets/POSTGRES_PASSWORD
      - POSTGRES_DB_FILE=/run/secrets/POSTGRES_DB

  couch:
    image: couchdb:3.1
    volumes:
      - couchdb_data:/opt/couchdb/data
    ports:
      - "5984:5984"
    env_file:
      - ./envs/dev/couch

  elasticsearch:
    build: ./elasticsearch
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    env_file:
      - ./envs/dev/elasticsearch

  voila:
    build: ./voila
    volumes:
      - type: bind
        source: ./dashboards_test
        target: /usr/share/voila/notebooks
        read_only: true
    ports:
      - "8866:8866"

secrets:
  POSTGRES_USER:
    file: ${SECRETS_DIRECTORY}/POSTGRES_USER
  POSTGRES_PASSWORD:
    file: ${SECRETS_DIRECTORY}/POSTGRES_PASSWORD
  POSTGRES_DB:
    file: ${SECRETS_DIRECTORY}/POSTGRES_DB

volumes:
  postgres_data:
  couchdb_data:
  elasticsearch:
